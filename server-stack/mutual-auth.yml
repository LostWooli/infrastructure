Parameters:

  App:
    Type: String

  AmiId:
    Type: String

  AutoScaleInstances:
    Type: String

  CertificateArn:
    Type: String

  Environment:
    Type: String

  ExternalLoadBalancerSecurityGroup:
    Type: String

  IamInstanceProfile:
    Type: String

  PhpVersion:
    Type: String

  Region:
    Type: String

  ServicesSshSecurityGroup:
    Type: String

  ServicesHttpSecurityGroup:
    Type: String

  ServiceName:
    Type: String

  SnsAutoScaleNotify:
    Type: String

  Stage:
    Type: String

  StackName:
    Type: String

  SubnetGroupList:
    Type: CommaDelimitedList

  SplunkVersion:
    Type: String

  Team:
    Default: none
    Type: String

  Version:
    Type: String

  VpcId:
    Type: String

  VPCZoneIdentifier:
    Type: String

  WebEc2InstanceType:
    Type: String

Conditions:

  IsNotProdOrDemo: !Not [!Or [!Equals [ '${Stage}', prd ], !Equals [ '${Stage}', demo ] ] ]
  IsNotProd: !Not [ !Equals [ '${Stage}', prd ] ]

Resources:

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: !Sub ${App}-${Stage}-ma-web-lb
      Scheme: internet-facing
      Type: network
      Subnets: !Ref SubnetGroupList
      Tags:
        - Key: APP
          Value: !Ref App
        - Key: Stage
          Value: !Ref Stage
        - Key: Team
          Value: !Ref Team

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /v2/health_check
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 2
      Name: !Sub ${App}-${Stage}-web-ma-tg-${Version}
      Port: 443
      Protocol: TCP
      UnhealthyThresholdCount: 2
      Tags:
        - Key: APP
          Value: !Ref App
        - Key: Stage
          Value: !Ref Stage
        - Key: Team
          Value: !Ref Team
      VpcId: !Ref VpcId
    DependsOn:
      - LoadBalancer

  ExternalMASecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Allow inbound HTTP/HTTPS Connections'
      GroupName: !Sub ${App}-${Stage}-web-ma-external-security-group
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0'
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
      Tags:
        - Key: APP
          Value: !Ref App
        - Key: Stage
          Value: !Ref Stage
      VpcId: !Ref VpcId

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: !Ref AmiId
      InstanceMonitoring: true
      InstanceType: !Ref WebEc2InstanceType
      KeyName: devops
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 50
            VolumeType: "gp2"
        - DeviceName: "/dev/sdb"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 50
            VolumeType: "gp2"
        - DeviceName: "/dev/sdc"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 50
            VolumeType: "gp2"
        - DeviceName: "/dev/sdd"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 50
            VolumeType: "gp2"
        - DeviceName: "/dev/sde"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 10
            VolumeType: "gp2"
        - DeviceName: "/dev/sdf"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 10
            VolumeType: "gp2"
      LaunchConfigurationName: !Sub ${App}-${Stage}-${Version}-web-ma-launch-configuration
      SecurityGroups:
        - !Ref ServicesHttpSecurityGroup
        - !Ref ServicesSshSecurityGroup
        - !Ref ExternalMASecurityGroup
      UserData: "IyEvYmluL2Jhc2gKZXhlYyAzPiYxIDQ+JjIKdHJhcCAnZXhlYyAyPiY0IDE+JjMnIDAgMSAyIDMKZXhlYyAxPi92YXIvbG9nLzAtb3JkZXIubG9nIDI+JjEKIyBDcmVhdGUgQnVpbGRlciBVc2VyCnVzZXJhZGQgLW0gLWQgL2hvbWUvYnVpbGRlciBidWlsZGVyIC1zIC9iaW4vYmFzaApta2RpciAvaG9tZS9idWlsZGVyLy5zc2gKZWNobyAiYnVpbGRlciBBTEw9KEFMTCkgTk9QQVNTV0Q6QUxMIiA+PiAvZXRjL3N1ZG9lcnMKIyBDcmVhdGUgU3BsdW5rIFVzZXIKdXNlcmFkZCAtbSAtZCAvaG9tZS9zcGx1bmsgc3BsdW5rIC1zIC9iaW4vYmFzaAojIEluc3RhbGwgZGVmYXVsdCBhcHBsaWNhdGlvbnMKZXhwb3J0IERFQklBTl9GUk9OVEVORD1ub25pbnRlcmFjdGl2ZQphcHQtZ2V0IHVwZGF0ZSAteQphcHQtZ2V0IC15IC1vIERwa2c6Ok9wdGlvbnM6Oj0iLS1mb3JjZS1jb25mZGVmIiAtbyBEcGtnOjpPcHRpb25zOjo9Ii0tZm9yY2UtY29uZm9sZCIgdXBncmFkZQphcHQgaW5zdGFsbCBweXRob24zLXBpcCAteQphcHQgaW5zdGFsbCBqcSAteQphcHQgaW5zdGFsbCBteWNsaSAteQphcHQgaW5zdGFsbCBydWJ5IC15CnBpcDMgaW5zdGFsbCBhd3NjbGkgLXEKcGlwMyBpbnN0YWxsIGJvdG8zIC1xCiMgR2V0IFNTSCBHSVQgcHJpdmF0ZSBrZXkgYW5kIGtub3duX2hvc3RzIGNvbmZpZwpyZWdpb249YGN1cmwgMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9tZXRhLWRhdGEvcGxhY2VtZW50L2F2YWlsYWJpbGl0eS16b25lfCByZXYgfCBjdXQgLWMgMi0gfCByZXZgCmF3cyBjb25maWd1cmUgc2V0IGRlZmF1bHQucmVnaW9uICRyZWdpb24KZW5jb2RlZF9zc2hfa2V5PWBhd3Mgc2VjcmV0c21hbmFnZXIgZ2V0LXNlY3JldC12YWx1ZSAtLXNlY3JldC1pZCBnaXRodWIgLS1vdXRwdXQganNvbiB8IGpxICcuU2VjcmV0U3RyaW5nJyB8IGN1dCAtZCAiOiIgLWYgMiB8IGN1dCAtZCAnIicgLWYgMiB8IGN1dCAtZCAnXCcgLWYgMWAKc3NoX2tleT1gZWNobyAkZW5jb2RlZF9zc2hfa2V5IHwgYmFzZTY0IC0tZGVjb2RlYAplbmNvZGVkX2tub3duX2hvc3RzPWBhd3Mgc2VjcmV0c21hbmFnZXIgZ2V0LXNlY3JldC12YWx1ZSAtLXNlY3JldC1pZCBrbm93bmhvc3RzIC0tb3V0cHV0IGpzb24gfCBqcSAnLlNlY3JldFN0cmluZycgfCBjdXQgLWQgIjoiIC1mIDIgfCBjdXQgLWQgJyInIC1mIDIgfCBjdXQgLWQgJ1wnIC1mIDFgCmtub3duX2hvc3RzPWBlY2hvICRlbmNvZGVkX2tub3duX2hvc3RzIHwgYmFzZTY0IC0tZGVjb2RlYApjYXQgPiAvaG9tZS9idWlsZGVyLy5zc2gvaWRfcnNhIDw8IEVPRgokc3NoX2tleQpFT0YKY2F0ID4gL2hvbWUvYnVpbGRlci8uc3NoL2tub3duX2hvc3RzIDw8IEVPRgoka25vd25faG9zdHMKRU9GCiMgQ2hhbmdlIHBlcm1pc3Npb24gZm9yIGtleXMKY2htb2QgNzAwIC9ob21lL2J1aWxkZXIvLnNzaApjaG1vZCA2MDAgL2hvbWUvYnVpbGRlci8uc3NoL2lkX3JzYQpjaG1vZCA2NjAgL2hvbWUvYnVpbGRlci8uc3NoL2tub3duX2hvc3RzCmNob3duIC1SIGJ1aWxkZXI6YnVpbGRlciAvaG9tZS9idWlsZGVyCiMgRmV0Y2ggcHJlYnVpbGQgc2NyaXB0cyBmcm9tIGdpdGh1YgpQUkVCVUlMRD0vdmFyL3ByZWJ1aWxkCm1rZGlyICRQUkVCVUlMRApjaG1vZCA3NzcgJFBSRUJVSUxECmNkICRQUkVCVUlMRApzdWRvIC11IGJ1aWxkZXIgc2ggLWMgJ2dpdCBjbG9uZSBnaXRAZ2l0aHViLmNvbTpHVE1DL3ByZWRlcGxveW1lbnRzY3JpcHRzLmdpdCcKIyBjZCAkUFJFQlVJTEQvcHJlZGVwbG95bWVudHNjcmlwdHMKIyBzdWRvIC11IGJ1aWxkZXIgc2ggLWMgJ2dpdCBjaGVja291dCBkZXZ0ZXN0JwpjaG1vZCAtUiAreCAkUFJFQlVJTEQvcHJlZGVwbG95bWVudHNjcmlwdHMvKi5zaAojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyBJbnZva2Ugc2NyaXB0IHNlcXVlbnNlCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyAKIyBTdGVwMSBQYXJ0aXRpb24gY29uZmlndXJlCnB5dGhvbjMgJFBSRUJVSUxEL3ByZWRlcGxveW1lbnRzY3JpcHRzLzFfYXV0b3BhcnQucHkKIyBTdGVwMiBTeXN0ZW0gY29uZmlndXJhdGlvbgovJFBSRUJVSUxEL3ByZWRlcGxveW1lbnRzY3JpcHRzLzJfc3lzY29uZmlnLnNoCiMgU3RlcDMgU2VjdXJpdHkgY29uZmlndXJhdGlvbgpzaCAkUFJFQlVJTEQvcHJlZGVwbG95bWVudHNjcmlwdHMvM19zZWN1cml0eS5zaAojIFN0ZXA0IE9uYm9vdApzdWRvICRQUkVCVUlMRC9wcmVkZXBsb3ltZW50c2NyaXB0cy80X29uYm9vdC5zaAojIFN0ZXAgNQojIFN0ZXAgNiBUYWdnaW5nIEVCUyBWb2x1bWVzCnN1ZG8gJFBSRUJVSUxEL3ByZWRlcGxveW1lbnRzY3JpcHRzLzZfZWJzdGFnZ2luZy5zaAojIFN0ZXAgNyBVc2VyIENyZWF0aW9uIHNjcmlwdApta2RpciAvb3B0L3Nlc3Npb25oYW5kbGVyCmNwICRQUkVCVUlMRC9wcmVkZXBsb3ltZW50c2NyaXB0cy9zZXNzaW9uX2hhbmRsZXIucHkgL29wdC9zZXNzaW9uaGFuZGxlci8KY2F0ID4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS9zZXNzaW9uX2hhbmRsZXIuc2VydmljZSA8PCBFT0YKW1VuaXRdCkRlc2NyaXB0aW9uPXNlc3Npb25faGFuZGxlcgpbU2VydmljZV0KVHlwZT1zaW1wbGUKVXNlcj1yb290CkV4ZWNTdGFydD0vdXNyL2Jpbi9weXRob24zIC9vcHQvc2Vzc2lvbmhhbmRsZXIvc2Vzc2lvbl9oYW5kbGVyLnB5CldvcmtpbmdEaXJlY3Rvcnk9L29wdC9zZXNzaW9uaGFuZGxlci8KUmVzdGFydD1hbHdheXMKUmVzdGFydFNlYz0yCltJbnN0YWxsXQpXYW50ZWRCeT1tdWx0aS11c2VyLnRhcmdldApFT0YKc3lzdGVtY3RsIGRhZW1vbi1yZWxvYWQKc3lzdGVtY3RsIGVuYWJsZSBzZXNzaW9uX2hhbmRsZXIuc2VydmljZQpzeXN0ZW1jdGwgc3RhcnQgc2Vzc2lvbl9oYW5kbGVyLnNlcnZpY2U="

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${App}-${Stage}-${Version}-web-auto-scaling-group-ma
      Cooldown: 30
      DesiredCapacity: !Ref AutoScaleInstances
      HealthCheckGracePeriod: 0
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref LaunchConfiguration
      MaxSize: 2
      MinSize: 1
      NotificationConfigurations:
        - TopicARN:
            Ref: SnsAutoScaleNotify
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
      Tags:
        - Key: AWS_REGION
          Value: !Ref Region
          PropagateAtLaunch: true
        - Key: APP
          Value: !Ref App
          PropagateAtLaunch: true
        - Key: Environment
          Value: !Ref Environment
          PropagateAtLaunch: true
        - Key: Name
          Value: !Sub ${App}-${Stage}-web-ma
          PropagateAtLaunch: true
        - Key: SplunkVersion
          Value: !Ref SplunkVersion
          PropagateAtLaunch: true
        - Key: Stage
          Value: !Ref Stage
          PropagateAtLaunch: true
        - Key: Team
          Value: !Ref Team
          PropagateAtLaunch: true
        - Key: PHPVER
          Value: !Ref PhpVersion
          PropagateAtLaunch: true
        - Key: !Ref StackName
          Value: true
          PropagateAtLaunch: true
      TargetGroupARNs:
        - !Ref TargetGroup
      TerminationPolicies:
        - OldestInstance
      VPCZoneIdentifier: !Split [ ",", !Ref VPCZoneIdentifier ]
    DependsOn:
      - TargetGroup

  AWSAutoScalingScheduledActionOff:
    Condition: IsNotProdOrDemo
    Type: AWS::AutoScaling::ScheduledAction
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      DesiredCapacity: 0
      MaxSize: 0
      MinSize: 0
      Recurrence: "59 23 * * 1-5" #This is UTC Time which should translate to 7PM for US-EAST
    DependsOn:
      - AutoScalingGroup

  AWSAutoScalingLifecycleHookOn:
    Condition: IsNotProdOrDemo
    Type: AWS::AutoScaling::ScheduledAction
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      DesiredCapacity: 1
      MaxSize: 1
      MinSize: 1
      Recurrence: "0 11 * * 1-5" #This is UTC Time which should translate to 6AM for US-EAST
    DependsOn:
      - AutoScalingGroup

  LoadBalancerHttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: TCP
    DependsOn:
      - LoadBalancer
      - TargetGroup

  DnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: Z230R4I8MX5L6Q
      Name: !Join
        - ''
        - - !If [ IsNotProd, !Sub '${Stage}-', '']
          - 'ma-api.cbresponseservices.com'
      ResourceRecords:
        - !GetAtt LoadBalancer.DNSName
      Type: CNAME
      TTL: 900

Outputs:

  AutoScalingGroup:
    Value: !Ref AutoScalingGroup