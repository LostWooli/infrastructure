Parameters:

  DatabaseEngineVersion:
    Default: 11.7
    Type: String

  DatabaseSubnetA:
    Type: AWS::EC2::Subnet::Id

  DatabaseSubnetB:
    Type: AWS::EC2::Subnet::Id

  RdsInstanceType:
    Type: String

  ServiceName:
    Type: String

  SnapshotIdentifier:
    Type: String
    Default: none

  Stage:
    Type: String

  Team:
    Default: none
    Type: String

  Version:
    Type: String
    Default: 1

  VpcCidrBlock:
    Type: String

  VpcId:
    Type: AWS::EC2::VPC::Id

Conditions:

  HasSnapshotIdentifier: !Not [ !Equals [ !Ref SnapshotIdentifier, 'none' ] ]
  IsProductionStage: !Equals [ !Ref Stage, prd ]

Resources:

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Only allow inbound Mysql Connections from the VPC'
      GroupName: !Sub ${ServiceName}-${Stage}-database-security-group
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCidrBlock
          FromPort: 3306
          ToPort: 3306
          IpProtocol: tcp
      Tags:
        - Key: APP
          Value: !Ref ServiceName
        - Key: Stage
          Value: !Ref Stage
        - Key: Team
          Value: !Ref Team
      VpcId: !Ref VpcId

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub Default RDS subnet group for ${ServiceName}-${Stage}
      #If this name ever changes, look in /database/database.yml and change the same there
      DBSubnetGroupName: !Sub ${ServiceName}-${Stage}-database-subnet-group
      SubnetIds:
        - !Ref DatabaseSubnetA
        - !Ref DatabaseSubnetB
      Tags:
        - Key: APP
          Value: !Ref ServiceName
        - Key: Name
          Value: !Sub ${ServiceName}-${Stage}-database-subnet-group
        - Key: Environment
          Value: !If [ IsProductionStage, prod, dev ]
        - Key: Stage
          Value: !Sub ${Stage}
        - Key: Team
          Value: !Ref Team

  RdsInstanceSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '/${ServiceName}/${Stage}/RDS_SECRET'
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: "password"
        PasswordLength: 16
        SecretStringTemplate: '{"username": "rdsmaster"}'
      Tags:
        - Key: App
          Value: !Ref ServiceName
        - Key: Stage
          Value: !Ref Stage
        - Key: Team
          Value: !Ref Team

  DbParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Sub ${ServiceName}-${Stage}-parameter-group
      Family: aurora-postgresql11
#      Parameters:
      Tags:
        - Key: App
          Value: !Ref ServiceName
        - Key: Name
          Value: !Sub ${ServiceName}-${Stage}
        - Key: Environment
          Value: !If [ IsProductionStage, prod, dev ]
        - Key: Stage
          Value: !Sub ${Stage}
        - Key: Team
          Value: !Ref Team

  DbClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Sub ${ServiceName}-${Stage}-cluster-parameter-group
      Family: aurora-postgresql11
      Parameters:
        rds.force_ssl: 1
      Tags:
        - Key: App
          Value: !Ref ServiceName
        - Key: Name
          Value: !Sub ${ServiceName}-${Stage}
        - Key: Environment
          Value: !If [ IsProductionStage, prod, dev ]
        - Key: Stage
          Value: !Sub ${Stage}
        - Key: Team
          Value: !Ref Team

  DatabaseCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      AvailabilityZones:
        - !Join [ "", [ !Ref 'AWS::Region', 'a' ] ]
        - !Join [ "", [ !Ref 'AWS::Region', 'b' ] ]
      BackupRetentionPeriod: 7
      DBClusterParameterGroupName: !Ref DbClusterParameterGroup
      DBClusterIdentifier: !If [ HasSnapshotIdentifier, !Sub '${ServiceName}-${Stage}-postgresql-cluster-${Version}', !Sub '${ServiceName}-${Stage}-postgresql-cluster-1' ]
      DBSubnetGroupName: !Sub ${ServiceName}-${Stage}-database-subnet-group
      Engine: aurora-postgresql
      EngineVersion: !Ref DatabaseEngineVersion
      MasterUsername: !If [ HasSnapshotIdentifier, !Ref 'AWS::NoValue', !Join ['', ['{{resolve:secretsmanager:', !Ref RdsInstanceSecret, '::username}}' ]] ]
      MasterUserPassword: !If [ HasSnapshotIdentifier, !Ref 'AWS::NoValue', !Join ['', ['{{resolve:secretsmanager:', !Ref RdsInstanceSecret, '::password}}' ]] ]
      PreferredBackupWindow: 01:00-02:00
      PreferredMaintenanceWindow: sat:02:00-sat:03:00
      SnapshotIdentifier: !If [ HasSnapshotIdentifier, !Ref SnapshotIdentifier, !Ref 'AWS::NoValue' ]
      StorageEncrypted: true
      Tags:
        - Key: App
          Value: !Ref ServiceName
        - Key: Name
          Value: !If [ HasSnapshotIdentifier, !Sub '${ServiceName}-${Stage}-postgresql-cluster-${Version}', !Sub '${ServiceName}-${Stage}-postgresql-cluster-1' ]
        - Key: Service
          Value: !Ref ServiceName
        - Key: Environment
          Value: !If [ IsProductionStage, prod, dev ]
        - Key: Stage
          Value: !Sub ${Stage}
        - Key: Team
          Value: !Ref Team
      VpcSecurityGroupIds:
        - !Ref DatabaseSecurityGroup
    DependsOn:
      - DbClusterParameterGroup
      - RdsInstanceSecret

  DatabaseInstance01:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref DatabaseCluster
      DBInstanceClass: !Ref RdsInstanceType
      DBInstanceIdentifier: !If [ HasSnapshotIdentifier, !Sub '${ServiceName}-${Stage}-postgresql-instance-${Version}-1', !Sub '${ServiceName}-${Stage}-postgresql-instance-1' ]
      DBParameterGroupName: !Ref DbParameterGroup
      Engine: aurora-postgresql
      EngineVersion: !Ref DatabaseEngineVersion
      Tags:
        - Key: App
          Value: !Ref ServiceName
        - Key: Name
          Value: !Sub '${ServiceName}-${Stage}-postgresql-instance-1'
        - Key: Service
          Value: !Ref ServiceName
        - Key: Environment
          Value: !If [ IsProductionStage, prod, dev ]
        - Key: Stage
          Value: !Sub ${Stage}
        - Key: Team
          Value: !Ref Team
    DependsOn:
      - DatabaseCluster
      - DbParameterGroup

  DatabaseInstance02:
    Type: AWS::RDS::DBInstance
    Condition: IsProductionStage
    Properties:
      DBClusterIdentifier: !Ref DatabaseCluster
      DBInstanceClass: !Ref RdsInstanceType
      DBInstanceIdentifier: !If [ HasSnapshotIdentifier, !Sub '${ServiceName}-${Stage}-postgresql-instance-${Version}-2', !Sub '${ServiceName}-${Stage}-postgresql-instance-2' ]
      DBParameterGroupName: !Ref DbParameterGroup
      Engine: aurora-postgresql
      EngineVersion: !Ref DatabaseEngineVersion
      Tags:
        - Key: App
          Value: !Ref ServiceName
        - Key: Name
          Value: !If [ HasSnapshotIdentifier, !Sub '${ServiceName}-${Stage}-postgresql-instance-${Version}-2', !Sub '${ServiceName}-${Stage}-postgresql-instance-2' ]
        - Key: Service
          Value: !Ref ServiceName
        - Key: Environment
          Value: !If [ IsProductionStage, prod, dev ]
        - Key: Stage
          Value: !Sub ${Stage}
        - Key: Team
          Value: !Ref Team
    DependsOn:
      - DatabaseCluster
      - DbParameterGroup

  ReadEndpointRoute53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      #Hardcoded rds.chargebacks911.com
      HostedZoneId: Z19NDRWV8W6AT7
      Name: !Sub ${ServiceName}-${Stage}-ro.rds.chargebacks911.com
      ResourceRecords:
        - !GetAtt DatabaseCluster.ReadEndpoint.Address
      TTL: 300
      Type: CNAME
    DependsOn:
      - DatabaseCluster

  WriteEndpointRoute53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      #Hardcoded rds.chargebacks911.com
      HostedZoneId: Z19NDRWV8W6AT7
      Name: !Sub ${ServiceName}-${Stage}.rds.chargebacks911.com
      ResourceRecords:
        - !GetAtt DatabaseCluster.Endpoint.Address
      TTL: 300
      Type: CNAME
    DependsOn:
      - DatabaseCluster

  SecretRdsInstanceAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref RdsInstanceSecret
      TargetId: !Ref DatabaseCluster
      TargetType: AWS::RDS::DBCluster
    DependsOn:
      - DatabaseCluster
      - RdsInstanceSecret

  #HOST is used by Laravel
  DbHostSsmParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ServiceName}/${Stage}/DB_HOST'
      Value: !GetAtt DatabaseCluster.Endpoint.Address
      Type: String
      Tags:
        App: !Ref ServiceName
        Stage: !Ref Stage
        Team: !Ref Team
    DependsOn:
      - DatabaseCluster

  DbHostReadOnlySsmParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ServiceName}/${Stage}/DB_HOST_READ_ONLY'
      Value: !GetAtt DatabaseCluster.ReadEndpoint.Address
      Type: String
      Tags:
        App: !Ref ServiceName
        Stage: !Ref Stage
        Team: !Ref Team
    DependsOn:
      - DatabaseCluster

  #HOSTNAME is used by Symfony
  DbHostnameSsmParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ServiceName}/${Stage}/DB_HOSTNAME'
      Value: !GetAtt DatabaseCluster.Endpoint.Address
      Type: String
      Tags:
        App: !Ref ServiceName
        Stage: !Ref Stage
        Team: !Ref Team
    DependsOn:
      - DatabaseCluster

  DbUsernameSsmParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ServiceName}/${Stage}/DB_USERNAME'
      Value: !Join ['', ['{{resolve:secretsmanager:', !Ref RdsInstanceSecret, '::username}}' ]]
      Type: String
      Tags:
        App: !Ref ServiceName
        Stage: !Ref Stage
        Team: !Ref Team
    DependsOn:
      - RdsInstanceSecret

  DbPasswordSecret:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ServiceName}/${Stage}/DB_PASSWORD'
      Type: String
      Value: !Join ['', ['{{resolve:secretsmanager:', !Ref RdsInstanceSecret, '::password}}' ]]
      Tags:
        App: !Ref ServiceName
        Stage: !Ref Stage
        Team: !Ref Team
    DependsOn:
      - RdsInstanceSecret

  AuditLogGroup:
    Condition: IsProductionStage
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/rds/cluster/${DatabaseCluster}/audit
      RetentionInDays: 30
    DependsOn:
      - DatabaseCluster

  SlowQueryLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/rds/cluster/${DatabaseCluster}/slowquery
      RetentionInDays: 30
    DependsOn:
      - DatabaseCluster

Outputs:

  BaseReadDatabaseUrl:
    Value: !Join
      - ''
      - - !Sub 'mysql://'
        - !Join ['', ['{{resolve:secretsmanager:', !Ref RdsInstanceSecret, '::username}}' ]]
        - ':'
        - !Join ['', ['{{resolve:secretsmanager:', !Ref RdsInstanceSecret, '::password}}' ]]
        - '@'
        - !Ref ReadEndpointRoute53RecordSet
        - ':3306/'

  BaseWriteDatabaseUrl:
    Value: !Join
      - ''
      - - !Sub 'mysql://'
        - !Join ['', ['{{resolve:secretsmanager:', !Ref RdsInstanceSecret, '::username}}' ]]
        - ':'
        - !Join ['', ['{{resolve:secretsmanager:', !Ref RdsInstanceSecret, '::password}}' ]]
        - '@'
        - !Ref WriteEndpointRoute53RecordSet
        - ':3306/'
